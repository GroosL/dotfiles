#!/usr/bin/env bash
#
# Script name: dmlogout
# Description: Logout, shutdown, reboot or lock screen.
# Dependencies: dmenu, systemd, slock, notify-send
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Derek Taylor, 
#               Simon Ingelsson

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

config="${HOME}/.config/dmscripts/dmconf"
# No issues should arrise since it won't even be sourced if the file doesn't exist
# shellcheck disable=SC1090	
[ -f "${config}" ] && source "${config}"
# Define LOCKER in .xprofile to set to different LOCKER program

: "${LOCKER:=slock}"

# use notify-send if run in dumb term
# TODO: add abillity to control from config.
_out="echo"
if [[ ${TERM} == 'dumb' ]]; then
    _out="notify-send"
fi
export _out

# look up what managers are used (makes it more dynamic)
declare -a MANAGERS
while IFS= read -r manager
do
    MANAGERS+=("${manager,,}")
done < <(grep 'Name' /usr/share/xsessions/*.desktop | awk -F"=" '{print $2}')

# An array of options to choose.
declare -a options=(
"Lock screen"
"Logout"
"Reboot"
"Shutdown"
"Suspend"
"Quit"
)

_out(){
    ${_out} "dmlogout" "$@"
}

# Piping the above array into dmenu.
# We use "printf '%s\n'" to format the array one item to a line.
choice=$(printf '%s\n' "${options[@]}" | dmenu -i -p 'Shutdown menu:' "${@}")

# What to do when/if we choose one of the options.
case $choice in
    'Logout')
        if [[ "$(echo -e "No\nYes" | dmenu -i -p "${choice}?" "${@}" )" == "Yes" ]]; then
            for manager in "${MANAGERS[@]}"; do 
                killall "${manager}" || output "Process ${manager} was not running."
            done
        else
            output "User chose not to logout." && exit 1
        fi
        ;;
    'Lock screen')
        ${LOCKER}
        ;;
    'Reboot')
        if [[ "$(echo -e "No\nYes" | dmenu -i -p "${choice}?" "${@}" )" == "Yes" ]]; then
            systemctl reboot
        else
            output "User chose not to reboot." && exit 0
        fi
        ;;
    'Shutdown')
        if [[ "$(echo -e "No\nYes" | dmenu -i -p "${choice}?" "${@}" )" == "Yes" ]]; then
            systemctl poweroff
        else
            output "User chose not to shutdown." && exit 0
        fi
        ;;
    'Suspend')
        if [[ "$(echo -e "No\nYes" | dmenu -i -p "${choice}?" "${@}" )" == "Yes" ]]; then
            systemctl suspend
        else
            output "User chose not to suspend." && exit 0
        fi
        ;;
    'Quit')
        output "Program terminated." && exit 0
    ;;
        # It is a common practice to use the wildcard asterisk symbol (*) as a final
    # pattern to define the default case. This pattern will always match.
    *)
        exit 0
    ;;
esac
